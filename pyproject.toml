[tool.poetry]
name = "learn-python"
version = "1.5.6"
description = "Learn to use Python"
authors = ["Sasha Bondarev <no@email.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "~3.11"

pyglet = "==2.0.10"
pytest = "==7.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 90


[tool.ruff.lint]
select = ["ALL"]


ignore = [
   "S101", # Assers are needed
   "ANN001", # Force typing, Open to discussion... I think it might be a bit too much to refactor
   "ANN201", # Tests do not need to return anything,
   "D103", "D102", "D200", # Open to discussion. I think is a good investment
   "D100", "D415", "D212", "D205", "D210", "D104",  # This might be really too much
   "D101", "D107", "D106", # Also don't see the point
   "INP001", # I currently don't understand how bad this is, https://docs.astral.sh/ruff/rules/implicit-namespace-package/
   "ANN204", "ANN202", # Doesn't look that bad tbh https://docs.astral.sh/ruff/rules/missing-return-type-special-method/
   "N815", # Not convinient if using pydantic or other sort of code where the actual typing matters
   "N805", # Sounds good check but when I need `cls` it fails
   "SLF001", # Can be discussed, soooomtimes is needed
   "ISC002", # I don't find it that important
   "C408", # Does not work quite nice with pytest converters
   "FBT002", # I think this one can be discussed. I don't personally thing is a good one to have
   "FBT001", "FBT003", # Ignored for now but I'd put this one as mandatory, so that we use keyword-only arguments
   "F405", "F403", # A bit too much for pytest, as conftest make a lot of work for us
   "F401", # `gnp_tests_lib.utils.environment.Environment` imported but unused -> Might be in a conftest...
   "B008", # Ignored for now but I'd put this one as mandatory.
   "S311", # Standard pseudo-random generators are not suitable for cryptographic purpose
   "ANN003", # I think we don't want to do this
   "DTZ007", "DTZ004", "DTZ003", "PLW0603", # Skipped for now but pending refinement!
   "FIX002", # Keeping To Do in code
   "TCH001", # Not sure which is the fix for @dataclass
   "F811", "RUF100", # Ruff thinks that pytest fixtures are not used
   "FA100", # We should not aim to support python < 3.10
   "D105", # Dunder methods are usually self-explaining
   "PYI025", # This would cause type hints to be longer and less readable
]
